trigger: none


pool:
  vmImage: 'Ubuntu-16.04'

resources:
  repositories:
    - repository: crux
      type: github
      name: ObjectivityLtd/crux
      #ref: refs/tags/0.4.1
      ref: refs/heads/feature/parametrization
      endpoint: crux

    - repository: tests
      type: github
      name: gabrielstar/node-bulletin-board
      #ref: refs/tags/0.3.2
      #ref: refs/heads/feature/parametrization
      #ref: refs/tags/0.4.1
      endpoint: crux

variables:
  imageName: 'appxx-img'
  dockerfilePath: 'bulletin-board-app/Dockerfile'
  dockerRegistryServiceConnection: boostRegistryServiceConnection
  armServiceConnectionBoost: boost
  appName: appxx
  container: appxx.azurecr.io/appxx-img:latest
  #crux
  #test execution environment & config
  cluster_namespace: crux$(Build.BuildID)
  crux_file: $(repoName)/path/to/jmeter/config/crux.properties
  thresholds_file: $(repoName)/path/to/jmeter/config/thresholds.properties
  workbooks_file: $(repoName)/path/to/jmeter/config/workbooks.properties
  repoName: node-bulletin-board
  cruxRepoName: crux
  #parameters of cluster if to be created (jmeter_dynamic)
  clusterNodeSize: Standard_D2_v2
  clusterNodeNumber: 2
  rgroup: az900
  cluster_name: k8
  namespace: default

stages:
- stage: Build
  displayName: Test, Build and Push docker image
  jobs:
  - job: Build
    displayName: Test, Build, Push
    steps:
    - bash: | #this can be run inside docker image
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee -a /etc/apt/sources.list.d/google.list
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        # Add Node's apt-key
        curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
        # Install NodeJS and Google Chrome
        sudo apt-get update
        sudo apt-get install -y nodejs google-chrome-stable
        ls
        cd bulletin-board-app
        sudo npm  install
        export CHROME_PATH=$(which google-chrome-stable)
        export LHCI_BUILD_CONTEXT__EXTERNAL_BUILD_URL="$BUILD_URL"
        export LHCI_BUILD_CONTEXT__CURRENT_BRANCH=$(Build.SourceBranchName) #otherwise upload will fail
        sudo npm install -g @lhci/cli@0.6.x
        lhci autorun
      displayName: Lighthouse tests

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageName)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest

- stage: Deploy
  displayName: Deploy App
  jobs:
  - job:
    steps:
    - task: AzureWebAppContainer@1 # Add this at the end of your file
      displayName: Deploy
      inputs:
        azureSubscription: '$(armServiceConnectionBoost)'
        appName: '$(appname)'
        containers: $(container)